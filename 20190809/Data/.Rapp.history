files
alldate=seq(as.Date("1999-01-01"),as.Date("2018-12-31"))
alldate=seq(as.Date("1999-01-01"),as.Date("2018-12-31"),by="day")
match(strdate,alldate)
final_data=array(NA,c(length(alldate),dim(result)[2]))
dim(final_data)
final_data[time.ind,]=result
rm(list=ls())#
setwd("/Users/lulushen/Summer_tutor/For_Guangyi/20190809/Data")#
files=Sys.glob("*.csv")#
#
result=NULL#
for(ifile in files){#
met=read.csv(files[7])#
data=met[,c("DATE","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")]#
result=rbind(result, data)	#
}#
strdate=as.Date(result[,1])#
alldate=seq(as.Date("1999-01-01"),as.Date("2018-12-31"),by="day")#
time.ind=match(strdate,alldate)
final_data=array(NA,c(length(alldate),dim(result)[2]))#
final_data[time.ind,]=result
final_data[,1]=alldate
dim(final_data)
final_data=array(NA,c(length(alldate),dim(result)[2]))
dim(final_data)
length(time.ind)
dim(result)
final_data[time.ind,]=result
dim(final_data)
class(result)
dim(result)
final_data=array(NA,c(length(alldate),dim(result)[2]))#
dim(final_data)
dim(final_data[time.ind,])
final_data[time.ind,]=result
dim(final_data[time.ind,])
final_data=array(NA,c(length(alldate),dim(result)[2]))#
dim(final_data)#
final_data[time.ind,]=data.matrix(result)
final_data[,1]=alldate
dim(final_data)
date=cbind(as.numeric(format(alldate,"%Y")),as.numeric(format(alldate,"%m")),as.numeric(format(alldate,"%d")))
head(final_data)
colnames(date)=c("Year","Month","Day")
alldate
final=cbind(date,final_data[,2:8])
head(final)
rm(list=ls())#
setwd("/Users/lulushen/Summer_tutor/For_Guangyi/20190809/Data")#
files=Sys.glob("*.csv")#
#
result=NULL#
for(ifile in files){#
met=read.csv(files[7])#
data=met[,c("DATE","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")]#
result=rbind(result, data)	#
}#
strdate=as.Date(result[,1])#
alldate=seq(as.Date("1999-01-01"),as.Date("2018-12-31"),by="day")#
time.ind=match(strdate,alldate)#
#
final_data=array(NA,c(length(alldate),dim(result)[2]))#
dim(final_data)#
final_data[time.ind,]=data.matrix(result)#
final_data[,1]=alldate#
#
date=cbind(as.numeric(format(alldate,"%Y")),as.numeric(format(alldate,"%m")),as.numeric(format(alldate,"%d")))#
colnames(date)=c("Year","Month","Day")#
final=cbind(date,final_data[,2:8])#
colnames(final)=c("Year","Month","Day","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")
head(final)
files
plot(final[,"MAX"],type="l")
rm(list=ls())#
setwd("/Users/lulushen/Summer_tutor/For_Guangyi/20190809/Data")#
files=Sys.glob("*.csv")#
#
result=NULL#
for(ifile in files){#
met=read.csv(ifile)#
data=met[,c("DATE","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")]#
result=rbind(result, data)	#
}#
strdate=as.Date(result[,1])#
alldate=seq(as.Date("1999-01-01"),as.Date("2018-12-31"),by="day")#
time.ind=match(strdate,alldate)#
#
final_data=array(NA,c(length(alldate),dim(result)[2]))#
dim(final_data)#
final_data[time.ind,]=data.matrix(result)#
final_data[,1]=alldate#
#
date=cbind(as.numeric(format(alldate,"%Y")),as.numeric(format(alldate,"%m")),as.numeric(format(alldate,"%d")))#
colnames(date)=c("Year","Month","Day")#
final=cbind(date,final_data[,2:8])#
colnames(final)=c("Year","Month","Day","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")#
head(final)#
#
plot(final[,"MAX"],type="l")
final_data[final_data>=999.9]=NA#
#
date=cbind(as.numeric(format(alldate,"%Y")),as.numeric(format(alldate,"%m")),as.numeric(format(alldate,"%d")))#
colnames(date)=c("Year","Month","Day")#
final=cbind(date,final_data[,2:8])#
colnames(final)=c("Year","Month","Day","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")#
head(final)#
#
plot(final[,"MAX"],type="l")
plot(final[,"MIN"],final[,"MAX"])
plot(final[,"MIN"],final[,"MAX"],type="l")
plot(final[,"MIN"],final[,"MAX"],type="o")
plot(final[,"MIN"],final[,"MAX"],type="o",pch=16,cex=0.2)
plot(final[,"DEWP"],final[,"MAX"],type="o",pch=16,cex=0.2)
time.ind=(date[,2]>=6 & date[,2]<=8)
new=final[time.ind,]
head(new)
fit<-lm(new[,"MAX"]~new[,"SLP"]+new[,"PREP"]+new[,"WDSP"])
fit<-lm(new[,"MAX"]~new[,"SLP"]+new[,"PRCP"]+new[,"WDSP"])
summary(fit)
fit<-lm(new[,"MAX"]~new[,"SLP"]+new[,"PRCP"]+new[,"WDSP"]+new[,"MIN"])#
summary(fit)
y=new[,"MAX"]
x=y[1:(length(y)-1)]
x=y[1:(length(y)-1)]#
y2=y[2:(length(y)-0)]
plot(x,y2)
fit(x,y2)
library(neuralnet)
time.ind=which(date[,2]>=6 & date[,2]<=8)
time.ind
time.ind=which(date[,2]>=6 & date[,2]<=8)#
y=final[time.ind+1,"MAX"]#
new=cbind(final[time.ind,],y)
library(neuralnet)
dim(new)
head(new)
new=na.omit(cbind(final[time.ind,],y))
head(new)
dim(new)
time.ind=which(date[,2]>=6 & date[,2]<=8)#
y=final[time.ind+1,"MAX"]#
new=na.omit(cbind(final[time.ind,c("Year","Month","Day","TEMP","DEWP","WDSP","MAX","MIN","PRCP")],y))
head(new)
dim(new)
class(new)
new=data.frame(new)
fit<-lm(y~TEMP+DEWP+WDSP+MAX+MIN+PRCP,data=new)
summary(fit)
nn=neuralnet(y~TEMP+DEWP+WDSP+PRCP,hidden=3)
nn=neuralnet(y~TEMP+DEWP+WDSP+PRCP,data=new,hidden=3)
nn
plot(nn)
names(nn)
nn$response
plot(new$y,nn$response)
names(nn)
plot(new$net.result,nn$y)
new$net.result
Predict=compute(nn,new)
plot(Predict$net.result,nn$y)
Predict$net.result
test=data.frame(new[,c("TEMP","DEWP","WDSP","PRCP")])
head(test)
Predict=compute(nn,test)
Predict$net.result
nn=neuralnet(y~TEMP+DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=3)#
plot(nn)#
names(nn)#
plot(new$net.result,nn$y)
test=data.frame(new[,c("TEMP","DEWP","WDSP","MAX","MIN","PRCP")])
Predict=compute(nn,test)
plot(Predict$net.result,nn$y)
plot(Predict$response,nn$y)
Predict$response
names(Predict)
names(neuros)
names(Predict$neuros)
(Predict$neuros)
prediction(nn)
ap=prediction(nn)
summary(fit)
ap=prediction(nn)
rm(list=ls())#
setwd("/Users/lulushen/Summer_tutor/For_Guangyi/20190809/Data")#
files=Sys.glob("*.csv")#
#
result=NULL#
for(ifile in files){#
met=read.csv(ifile)#
data=met[,c("DATE","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")]#
result=rbind(result, data)	#
}#
strdate=as.Date(result[,1])#
alldate=seq(as.Date("1999-01-01"),as.Date("2018-12-31"),by="day")#
time.ind=match(strdate,alldate)#
#
final_data=array(NA,c(length(alldate),dim(result)[2]))#
dim(final_data)#
final_data[time.ind,]=data.matrix(result)#
final_data[,1]=alldate#
final_data[final_data>=999.9]=NA#
#
date=cbind(as.numeric(format(alldate,"%Y")),as.numeric(format(alldate,"%m")),as.numeric(format(alldate,"%d")))#
colnames(date)=c("Year","Month","Day")#
final=cbind(date,final_data[,2:8])#
colnames(final)=c("Year","Month","Day","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")#
head(final)
time.ind=which(date[,2]>=6 & date[,2]<=8)#
y=final[time.ind+1,"MAX"]#
new=na.omit(cbind(final[time.ind,c("Year","Month","Day","TEMP","DEWP","WDSP","MAX","MIN","PRCP")],y))#
head(new)#
new=data.frame(new)#
fit<-lm(y~TEMP+DEWP+WDSP+MAX+MIN+PRCP,data=new)#
summary(fit)
library(neuralnet)#
nn=neuralnet(y~TEMP+DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=3)#
plot(nn)#
names(nn)
plot(new$net.result,nn$y)
ap=prediction(nn)
prediction
ap=predict(nn)
ap=predict(nn,new)
names(ap)
ap
summary(fit)
fit<-lm(y~DEWP+WDSP+MAX+MIN+PRCP,data=new)#
summary(fit)
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=3)#
plot(nn)#
names(nn)
ap=predict(nn,new)
ap[1:10]
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])
Predict=compute(nn,test)
Predict
set.seed(500)#
library(MASS)#
data <- Boston
index <- sample(1:nrow(data),round(0.75*nrow(data)))#
train <- data[index,]#
test <- data[-index,]#
lm.fit <- glm(medv~., data=train)#
summary(lm.fit)#
pr.lm <- predict(lm.fit,test)#
MSE.lm <- sum((pr.lm - test$medv)^2)/nrow(test)
maxs <- apply(data, 2, max) #
mins <- apply(data, 2, min)#
#
scaled <- as.data.frame(scale(data, center = mins, scale = maxs - mins))#
#
train_ <- scaled[index,]#
test_ <- scaled[-index,]
scaled <- as.data.frame(scale(data, center = mins, scale = maxs - mins))#
#
train_ <- scaled[index,]#
test_ <- scaled[-index,]#
#
n <- names(train_)#
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))#
nn <- neuralnet(f,data=train_,hidden=c(5,3),linear.output=T)
pr.nn <- compute(nn,test_[,1:13])
pr.nn_ <- pr.nn$net.result*(max(data$medv)-min(data$medv))+min(data$medv)
pr.nn
pr.nn_ <- pr.nn$net.result*(max(data$medv)-min(data$medv))+min(data$medv)
test.r <- (test_$medv)*(max(data$medv)-min(data$medv))+min(data$medv)
MSE.nn <- sum((test.r - pr.nn_)^2)/nrow(test_)
MSE.nn
train_
f
plot(nn)
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=3,linear.output=T)
plot(nn)
names(nn)
ap=predict(nn,new)
ap[1:10]
new$y
index <- sample(1:nrow(data),round(0.75*nrow(data)))#
train <- data[index,]#
test <- data[-index,]
dim(trian)
dim(train)
set.seed(500)#
library(MASS)#
data <- Boston#
#
index <- sample(1:nrow(data),round(0.75*nrow(data)))
maxs <- apply(data, 2, max) #
mins <- apply(data, 2, min)
scaled <- as.data.frame(scale(data, center = mins, scale = maxs - mins))
scaled <- data
train_ <- scaled[index,]#
test_ <- scaled[-index,]
n <- names(train_)#
f <- as.formula(paste("medv ~", paste(n[!n %in% "medv"], collapse = " + ")))#
nn <- neuralnet(f,data=train_,hidden=c(5,3),linear.output=T)#
plot(nn)
pr.nn <- compute(nn,test_[,1:13])
pr.nn
maxs <- apply(new, 2, max) #
mins <- apply(new, 2, min)#
#
scaled <- as.data.frame(scale(new, center = mins, scale = maxs - mins))
head(new)
new=scaled
head(new)
new=data.frame(new)
fit<-lm(y~DEWP+WDSP+MAX+MIN+PRCP,data=new)
summary(fit)
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=3,linear.output=T)
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)
Predict
plot(Predict$response,nn$y)
Predict$response
names(Predict)
plot(Predict$net.result,nn$y)
Predict$net.result
nn$y
plot(Predict$net.result,new$y)
cor(Predict$net.result,new$y)
cor(Predict$net.result,new$y)^2
cor(nn$net.result,new$y)^2
names(nn)
nn$net.result
cor(nn$net.result,new$y)
length(nn$net.result)
dim(nn$net.result)
ss=(nn$net.result)
names(ss)
nn$net.result
ss=(nn$net.result[0])
(nn$net.result[0])
nn$net.result[1]
cor(nn$net.result[,1],new$y)^2
ss=(as.numeric(nn$net.result))
Predict
cor(Predict$net.result,new$y)^2
library(neuralnet)#
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=5)#
plot(nn)#
names(nn)#
# plot(new$net.result,nn$y)#
#
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
summary(fit)
340/4*5
rm(list=ls())#
setwd("/Users/lulushen/Summer_tutor/For_Guangyi/20190809/Data")#
files=Sys.glob("*.csv")#
#
result=NULL#
for(ifile in files){#
met=read.csv(ifile)#
data=met[,c("DATE","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")]#
result=rbind(result, data)	#
}
strdate=as.Date(result[,1])#
alldate=seq(as.Date("1999-01-01"),as.Date("2018-12-31"),by="day")#
time.ind=match(strdate,alldate)#
#
final_data=array(NA,c(length(alldate),dim(result)[2]))#
dim(final_data)#
final_data[time.ind,]=data.matrix(result)#
final_data[,1]=alldate#
final_data[final_data>=999.9]=NA
date=cbind(as.numeric(format(alldate,"%Y")),as.numeric(format(alldate,"%m")),as.numeric(format(alldate,"%d")))#
colnames(date)=c("Year","Month","Day")#
final=cbind(date,final_data[,2:8])#
colnames(final)=c("Year","Month","Day","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")#
head(final)
time.ind=which(date[,2]>=6 & date[,2]<=8)#
y=final[time.ind+1,"MAX"]#
new=na.omit(cbind(final[time.ind,c("Year","Month","Day","TEMP","DEWP","WDSP","MAX","MIN","PRCP")],y))
mean <- apply(new, 2, max,na.rm=T) #
sd <- apply(new, 2, sd,na.rm=T)
std <- apply(new, 2, sd,na.rm=T)
mean <- apply(new, 2, mean,na.rm=T) #
std <- apply(new, 2, sd,na.rm=T)
scaled <- as.data.frame(scale(new, center = mean, scale = std))
new=scaled#
head(new)#
new=data.frame(new)#
fit<-lm(y~DEWP+WDSP+MAX+MIN+PRCP,data=new)#
summary(fit)
library(neuralnet)#
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=5)
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=3)
summary(fit)
plot(nn)
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=1)
plot(nn)
names(nn)
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=3)
plot(nn)
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=3,act.fct="tanh")
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=5,act.fct="tanh")#
plot(nn)#
names(nn)#
# plot(new$net.result,nn$y)#
#
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
head(new)
time.ind=which(date[,2]>=6 & date[,2]<=8)#
y=final[time.ind+1,"MAX"]#
new=na.omit(cbind(final[time.ind,c("Year","Month","Day","TEMP","DEWP","WDSP","MAX","MIN","PRCP")],y))
head(new)
time.ind=which(date[,2]>=6 & date[,2]<=8)#
y=final[time.ind+1,"TEMP"]#
new=na.omit(cbind(final[time.ind,c("Year","Month","Day","TEMP","DEWP","WDSP","MAX","MIN","PRCP")],y))
mean <- apply(new, 2, mean,na.rm=T) #
std <- apply(new, 2, sd,na.rm=T)#
#
scaled <- as.data.frame(scale(new, center = mean, scale = std))
new=scaled#
head(new)#
new=data.frame(new)#
fit<-lm(y~TEMP+DEWP+WDSP+MAX+MIN+PRCP,data=new)#
summary(fit)
fit<-lm(y~DEWP+WDSP+MAX+MIN+PRCP,data=new)#
summary(fit)
library(neuralnet)#
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=5,act.fct="tanh")
plot(nn)
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=4,act.fct="tanh")
plot(nn)
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=4,act.fct="tanh",linear.output = F)
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=4,act.fct="tanh",linear.output = T, threshold=0.1,stepmax=1e5)
plot(nn)#
names(nn)
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
summary(fit)
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=5,act.fct="tanh",linear.output = T, threshold=0.05,stepmax=1e5)#
plot(nn)#
names(nn)#
# plot(new$net.result,nn$y)#
#
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=5,act.fct="tanh",linear.output = T, threshold=0.1,stepmax=1e5)
plot(nn)#
names(nn)
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
rm(list=ls())#
setwd("~/Summer_tutor/For_Guangyi/20190809/Data")#
files=Sys.glob("*.csv")#
#
#===== read data in all years ======#
#the year 2004 is missing#
result=NULL#
for(ifile in files){#
met=read.csv(ifile)#
data=met[,c("DATE","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")]#
result=rbind(result, data)	#
}#
#
#===== now deal with missing data ======#
strdate=as.Date(result[,1])#
alldate=seq(as.Date("1999-01-01"),as.Date("2018-12-31"),by="day")#
time.ind=match(strdate,alldate)#
#
final_data=array(NA,c(length(alldate),dim(result)[2]))#
dim(final_data)#
final_data[time.ind,]=data.matrix(result)#
final_data[,1]=alldate#
final_data[final_data>=999.9]=NA#
#
date=cbind(as.numeric(format(alldate,"%Y")),as.numeric(format(alldate,"%m")),as.numeric(format(alldate,"%d")))#
colnames(date)=c("Year","Month","Day")#
final=cbind(date,final_data[,2:8])#
colnames(final)=c("Year","Month","Day","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")#
head(final)#
#
time.ind=which(date[,2]>=6 & date[,2]<=8)#
y=final[time.ind+1,"TEMP"]#
new=na.omit(cbind(final[time.ind,c("Year","Month","Day","TEMP","DEWP","WDSP","MAX","MIN","PRCP")],y))
head(new)#
#=====================================#
maxs <- apply(new, 2, max,na.rm=T) #
mins <- apply(new, 2, min,na.rm=T)#
mean <- apply(new, 2, mean,na.rm=T) #
std <- apply(new, 2, sd,na.rm=T)#
#
scaled <- as.data.frame(scale(new, center = mins, scale = maxs-mins))
new=scaled#
head(new)#
new=data.frame(new)#
fit<-lm(y~DEWP+WDSP+MAX+MIN+PRCP,data=new)#
summary(fit)
library(neuralnet)#
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=3,act.fct="tanh",linear.output = T, threshold=0.1,stepmax=1e5)#
plot(nn)#
names(nn)
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=3,act.fct="logic",linear.output = T, threshold=0.1,stepmax=1e5)#
plot(nn)#
names(nn)#
# plot(new$net.result,nn$y)#
#
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=3,act.fct="logistic",linear.output = T, threshold=0.1,stepmax=1e5)#
plot(nn)#
names(nn)#
# plot(new$net.result,nn$y)#
#
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=5,act.fct="logistic",linear.output = T, threshold=0.1,stepmax=1e5)#
plot(nn)#
names(nn)#
# plot(new$net.result,nn$y)#
#
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
rm(list=ls())#
setwd("~/Summer_tutor/For_Guangyi/20190809/Data")#
files=Sys.glob("*.csv")#
#
#===== read data in all years ======#
#the year 2004 is missing#
result=NULL#
for(ifile in files){#
met=read.csv(ifile)#
data=met[,c("DATE","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")]#
result=rbind(result, data)	#
}#
#
#===== now deal with missing data ======#
strdate=as.Date(result[,1])#
alldate=seq(as.Date("1999-01-01"),as.Date("2018-12-31"),by="day")#
time.ind=match(strdate,alldate)#
#
final_data=array(NA,c(length(alldate),dim(result)[2]))#
dim(final_data)#
final_data[time.ind,]=data.matrix(result)#
final_data[,1]=alldate#
final_data[final_data>=999.9]=NA#
#
date=cbind(as.numeric(format(alldate,"%Y")),as.numeric(format(alldate,"%m")),as.numeric(format(alldate,"%d")))#
colnames(date)=c("Year","Month","Day")#
final=cbind(date,final_data[,2:8])#
colnames(final)=c("Year","Month","Day","TEMP","DEWP","SLP","WDSP","MAX","MIN","PRCP")#
head(final)#
#
time.ind=which(date[,2]>=6 & date[,2]<=8)#
y=final[time.ind+1,"TEMP"]#
new=na.omit(cbind(final[time.ind,c("Year","Month","Day","TEMP","DEWP","WDSP","MAX","MIN","PRCP")],y))#
#
head(new)#
#=====================================#
maxs <- apply(new, 2, max,na.rm=T) #
mins <- apply(new, 2, min,na.rm=T)#
avg <- apply(new, 2, mean,na.rm=T) #
std <- apply(new, 2, sd,na.rm=T)#
#
scaled <- as.data.frame(scale(new, center = avg, scale = std))#
#
new=scaled#
head(new)#
new=data.frame(new)#
fit<-lm(y~DEWP+WDSP+MAX+MIN+PRCP,data=new)#
summary(fit)#
#====#
library(neuralnet)#
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=5,act.fct="tanh",linear.output = T, threshold=0.1,stepmax=1e5)#
plot(nn)#
names(nn)#
# plot(new$net.result,nn$y)#
#
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=4,act.fct="tanh",linear.output = T, threshold=0.1,stepmax=1e5)#
plot(nn)#
names(nn)#
# plot(new$net.result,nn$y)#
#
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
nn=neuralnet(y~DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=4,act.fct="tanh",linear.output = T, threshold=0.05,stepmax=1e5)#
plot(nn)#
names(nn)#
# plot(new$net.result,nn$y)#
#
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
fit<-lm(y~DEWP+WDSP+MAX+MIN+PRCP,data=new)#
summary(fit)
sqrt(0.47)
sqrt(0.51)
nn=neuralnet(y~TEMP+DEWP+WDSP+MAX+MIN+PRCP,data=new,hidden=4,act.fct="tanh",linear.output = T, threshold=0.05,stepmax=1e5)#
plot(nn)#
names(nn)#
# plot(new$net.result,nn$y)#
#
test=data.frame(new[,c("DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
test=data.frame(new[,c("TEMP","DEWP","WDSP","MAX","MIN","PRCP")])#
Predict=compute(nn,test)#
cor(Predict$net.result,new$y)^2
fit<-lm(y~TEMP+DEWP+WDSP+MAX+MIN+PRCP,data=new)#
summary(fit)
